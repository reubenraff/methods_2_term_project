#!/usr/bin/env python
import argparse
from ReviewLogClassifier import ReviewLogClassifier
from NBClassifier import NBClassifier
from random_forest_classifier import RandomForestClassifier
from support_vector_classifier import SupportVectorClassifier
import utils
import sklearn
from sklearn.metrics import accuracy_score


def main(args: argparse.Namespace) -> None:
    df = utils.extract_features(args.train)
    X_train, X_test, y_train, y_test = utils.train_test_split(df["review"],df["num_sentiment"])
    classifier = args.model
    if args.model == "SupportVectorClassifier":
        classifier = SupportVectorClassifier()
    elif args.model == "LogisticRegression":
        classifier = ReviewLogClassifier()
    elif args.model == "RandomForestClassifier":
        classifier = RandomForestClassifier()
    else:
        classifier = NBClassifier()
    classifier.train(X_train, y_train)
    preds = classifier.predict(X_test)
    score = accuracy_score(preds,y_test)
    print(f"score: ", score)


if __name__ == "__main__":
    parser = argparse.ArgumentParser(description=__doc__)
    parser.add_argument("train", help="path to input train TSV")
    parser.add_argument("model", help="path to output model")
    main(parser.parse_args())
